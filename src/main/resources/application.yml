spring:
  application:
    name: kafka
  cloud:
    stream:
      schemaRegistryClient:
        endpoint: http://192.168.99.100:8081
      kafka:
        binder:
          brokers: PLAINTEXT://192.168.99.100:9092
          useNativeDecoding: true
          useNativeEncoding: true
        bindings:
          inputConfluent:
            consumer:
              configuration:
                schema.registry.url: http://192.168.99.100:8081
                specific.avro.reader: true
                key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
                value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
          outputConfluent:
            producer:
              configuration:
                schema.registry.url: http://192.168.99.100:8081
                key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer

      bindings:
        inputConfluent:
          contentType: application/*+avro
          destination: input-confluent-destination
          group: input-confluent-group
        inputScs:
          contentType: application/*+avro
          destination: input-scs-destination
          group: input-scs-group
        outputScs:
          contentType: application/*+avro
          destination: output-scs-destination
        outputConfluent:
          contentType: application/*+avro
          destination: output-confluent-destination
